#!/bin/bash

set -e
set -o pipefail

usage() {
  echo "usage: git rename [<options>] <name>"
  echo
  echo "    -d, --dry-run       Print debugging information and show what commands will"
  echo "                        be executed, without actually taking any actions."
  echo
}

err_msg() {
  echo "error: $1"
  usage
  exit 1
}

DRY_RUN="no"
ARGS=""
while (( "$#" )); do
  case "$1" in
    -d|--dry-run)
      DRY_RUN="yes"
      shift
      ;;
    -h)
      usage
      exit 1
      ;;
    -*)
      err_msg "unknown option '$1'"
      ;;
    *)
      ARGS="$ARGS $1"
      shift
      ;;
  esac
done

ARGS_COUNT=$(echo "$ARGS" | wc -w)
if [ "$ARGS_COUNT" -ne 1 ]; then
  err_msg "must specify 1 name only"
fi
NEW_BRANCH_NAME=$(echo "$ARGS" | tr -d ' ')

# Get the remote name and default branch
# This assumes the current branch was already tracking <remote>/<default_branch>
REMOTE_NAME=$(git rev-parse --abbrev-ref --symbolic-full-name @{upstream} | cut -d"/" -f1)
DEFAULT_BRANCH=$(git rev-parse --abbrev-ref --symbolic-full-name @{upstream} | cut -d"/" -f2-)

if [ "$NEW_BRANCH_NAME" = "$DEFAULT_BRANCH" ]; then
  err_msg "branch name cannot be renamed to $DEFAULT_BRANCH"
fi

# Get the local branch name
OLD_BRANCH_NAME=$(git symbolic-ref -q --short HEAD)
case "$OLD_BRANCH_NAME" in
  "$DEFAULT_BRANCH")
    err_msg "cannot rename "$DEFAULT_BRANCH" branch"
    ;;
  "$NEW_BRANCH_NAME")
    err_msg "new branch name is not unique"
    ;;
esac

UPDATE_REMOTE="no"
if git branch -r | grep -q "$OLD_BRANCH_NAME"; then
  UPDATE_REMOTE="yes"
fi

rename_local_branch="git branch -m $NEW_BRANCH_NAME"
push_new_remote_branch="git push --set-upstream $REMOTE_NAME $NEW_BRANCH_NAME"
delete_old_remote_branch="git push --delete $REMOTE_NAME $OLD_BRANCH_NAME"

if [ "$DRY_RUN" = "yes" ]; then
  msg="dry-run: Info:"
  echo "$msg UPDATE_REMOTE: $UPDATE_REMOTE"
  echo "$msg REMOTE_NAME: $REMOTE_NAME"
  echo "$msg OLD_BRANCH_NAME: $OLD_BRANCH_NAME"
  echo "$msg NEW_BRANCH_NAME: $NEW_BRANCH_NAME"
  
  echo
  msg="dry-run: Execute:"
  echo "$msg $rename_local_branch"

  if [ $UPDATE_REMOTE = "yes" ]; then
    echo "$msg $push_new_remote_branch"
    echo "$msg $delete_old_remote_branch"
  fi
else
  $rename_local_branch

  if [ $UPDATE_REMOTE = "yes" ]; then
    $push_new_remote_branch
    $delete_old_remote_branch
  fi
fi

exit 0
